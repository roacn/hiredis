name: Build via Cygwin
on:
  workflow_dispatch:

jobs:
  ubuntu:
    name: Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list
          sudo apt-get update
          sudo apt-get install -y redis-server valgrind libevent-dev

      - name: Build using cmake
        id: build
        env:
          EXTRA_CMAKE_OPTS: -DENABLE_EXAMPLES:BOOL=ON -DENABLE_SSL:BOOL=ON -DENABLE_SSL_TESTS:BOOL=ON -DENABLE_ASYNC_TESTS:BOOL=ON
          CFLAGS: -Werror
          CXXFLAGS: -Werror
        run: mkdir build && cd build && cmake .. && make

      - name: Build using makefile
        run: USE_SSL=1 TEST_ASYNC=1 make

      - name: Upload artifacts
        continue-on-error: true
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: "hiredis-linux"
          path: "${{ github.workspace }}"

      - name: Run tests
        env:
          SKIPS_AS_FAILS: 1
          TEST_SSL: 1
        run: $GITHUB_WORKSPACE/test.sh
        

      #      - name: Run tests under valgrind
      #        env:
      #          SKIPS_AS_FAILS: 1
      #          TEST_PREFIX: valgrind --error-exitcode=99 --track-origins=yes --leak-check=full
      #        run: $GITHUB_WORKSPACE/test.sh

  windows:
    name: Windows
    runs-on: windows-latest
    env: 
      HIREDIS_PATH: ${{ github.workspace }}
    steps:
      - run: git config --global core.autocrlf input
      - run: git config --global --add safe.directory /cygdrive/d/a/hiredis/hiredis
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          choco install -y ninja memurai-developer

      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build hiredis
        run: |
          mkdir build && cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DENABLE_EXAMPLES=ON
          ninja -v

      - name: Run tests
        run: |
          ./build/hiredis-test.exe

      - name: Install Cygwin Action
        uses: cygwin/cygwin-install-action@master
        with:
          packages: make git gcc-core

      - name: Build in cygwin
        id: build
        env:
          HIREDIS_PATH: ${{ github.workspace }}
        run: |
          make clean && make
          cp C:\cygwin ${{ github.workspace }}\cygwin
      
      - name: Upload artifacts
        continue-on-error: true
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: "hiredis-windows"
          path:  |
            ${{ github.workspace }}
        
      - name: Release hiredis
        continue-on-error: true
        if: steps.build.outcome == 'success'
        uses: ncipollo/release-action@main
        with:
          name: hiredis-windows
          tag: hiredis-windows
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          removeArtifacts: true
          artifacts: "${{ github.workspace }}\\build\\*.dll,${{ github.workspace }}\\build\\*.lib,${{ github.workspace }}\\build\\*.exe"

  delete-releases-artifacts:
    name: Delete releases artifacts
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id
    
    steps:
    - name: Delete older workflow runs and artifacts
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 3
        
    - name: Delete older releases
      uses: dev-drprasad/delete-older-releases@master
      with:
        repo: ${{ github.repository }}
        keep_latest: 7
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
